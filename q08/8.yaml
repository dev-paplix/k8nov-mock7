apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-storage
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: csi-driver.example-vendor.example
reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
  - discard # this might enable UNMAP / TRIM at the block storage layer
volumeBindingMode: WaitForFirstConsumer
parameters:
  guaranteedReadWriteLatency: "true" # provider-specific


---


apiVersion: v1
kind: PersistentVolume
metadata:
  name: pd-standard
  labels:
    type: local
spec:
  storageClassName: fast-storage
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pvc
  namespace: db
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-storage

---

apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: db
  labels:
    app: postgres
spec:
  ports:
  - port: 5432

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-statefulset
  namespace: db
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "db-service"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: postgres
        image: postgres:16-alpine3.20
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: app-pvc